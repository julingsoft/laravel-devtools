<script lang="ts">
import {reactive} from "vue"
import { {{$camelName}}StoreService, {{$camelName}}ShowService, {{$camelName}}UpdateService } from '@/services/admin/{{$camelName}}'
import type { I{{$studlyName}}UpsertRequest } from '@/types/admin/{{$camelName}}'

export default {
  data () {
    return {
      visible: false,
      dataForm: {
@foreach($columns as $column)
@if($column['camel_name'] === $primaryKey)
        {{ $column['camel_name'] }}: 0,
@else
        {{ $column['camel_name'] }}: '',
@endif
@endforeach
      },
      dataRule: {
@foreach($columns as $column)
@if($column['camel_name'] !== $primaryKey)
        {{ $column['camel_name'] }}: [
          { required: true, message: '{{$column['comment']}}不能为空', trigger: 'blur' }
        ],
@endif
@endforeach
      }
    }
  },
  methods: {
    init (id: number) {
      this.dataForm.{{ $primaryKey }} = id || 0
      this.visible = true
      this.$nextTick(() => {
        this.$refs['dataForm'].resetFields()
        if (this.dataForm.{{ $primaryKey }}) {
          {{$camelName}}ShowService(this.dataForm.{{ $primaryKey }}).then((data) => {
@foreach($columns as $column)
@if($column['camel_name'] === $primaryKey)
            this.dataForm.{{ $column['camel_name'] }} = data.{{ $column['camel_name'] }}
@endif
@endforeach
          })
        }
      })
    },
    // 表单提交
    dataFormSubmit () {
      this.$refs['dataForm'].validate((valid) => {
        if (valid) {
          const formData: I{{$studlyName}}UpsertRequest = reactive<I{{$studlyName}}UpsertRequest>({
@foreach($columns as $column)
@if($column['camel_name'] === $primaryKey)
            '{{ $column['camel_name'] }}': this.dataForm.{{ $column['camel_name'] }} || undefined,
@else
            '{{ $column['camel_name'] }}': this.dataForm.{{ $column['camel_name'] }},
@endif
@endforeach
          }) // (this.dataForm)

          const message = {
            message: '操作成功',
            type: 'success',
            duration: 1500,
            onClose: () => {
              this.visible = false
              this.$emit('refreshDataList')
            }
          }

          if (this.dataForm.{{ $primaryKey }}) {
            {{$camelName}}UpdateService(this.dataForm.{{ $primaryKey }}, formData).then(() => {
              this.$message(message)
            })
          } else{
            {{$camelName}}StoreService(formData).then(() => {
              this.$message(message)
            })
          }
        }
      })
    }
  }
}
</script>

<template>
    <el-dialog
    :title="!dataForm.{{ $primaryKey }} ? '新增' : '修改'"
    :close-on-click-modal="false"
    :visible.sync="visible">
    <el-form :model="dataForm" :rules="dataRule" ref="dataForm" @keyup.enter.native="dataFormSubmit()" label-width="80px">
@foreach($columns as $column)
@if($column['camel_name'] === $primaryKey)
    <el-form-item label="{{ $column['comment'] }}" prop="{{ $column['camel_name'] }}">
      <el-input v-model="dataForm.{{ $column['camel_name'] }}" placeholder="{{ $column['comment'] }}"></el-input>
    </el-form-item>
@endif
@endforeach
    </el-form>
    <span slot="footer" class="dialog-footer">
      <el-button @click="visible = false">取消</el-button>
      <el-button type="primary" @click="dataFormSubmit()">确定</el-button>
    </span>
  </el-dialog>
</template>

<style scoped>

</style>
